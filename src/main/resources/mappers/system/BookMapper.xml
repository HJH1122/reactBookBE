<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- 북 목록 조회 -->
<mapper namespace="kr.happyjob.study.system.repository.BookMapper">
  <select id="selectBookList" parameterType="hashmap" resultType="kr.happyjob.study.system.vo.BookVo">
    /*kr.happyjob.study.system.repository.BookMapper.bookList*/
		SELECT
			BOOK_NO,
			BOOK_TITLE,
			BOOK_WRITER,
			BOOK_CNT,
			PUBLISHER,
			BOOK_PRICE
		FROM TB_BOOK

		<where>
			<choose>
	         <when test="option eq ''.toString()">
	           AND (BOOK_TITLE LIKE CONCAT('%', #{keyword}, '%') or BOOK_WRITER LIKE CONCAT('%', #{keyword}, '%'))
	         </when>
	         <when test="option eq '1'.toString()">
	           AND BOOK_TITLE LIKE CONCAT('%', #{keyword}, '%')
	         </when>
	         <when test="option eq '2'.toString()">
	           AND BOOK_WRITER LIKE CONCAT('%', #{keyword}, '%')
	         </when>
	       </choose>

		</where>

		 ORDER BY BOOK_NO DESC
		 LIMIT #{pageIndex}, #{pageSize}
  </select>
  
  <!-- 북 목록 총 갯수 조회 -->
	<select id="selectBookCnt" parameterType="java.util.Map"  resultType="int">
		/*kr.happyjob.study.system.repository.BookMapper.bookCnt*/
		SELECT COUNT(*)
		FROM 	TB_BOOK
		
		<where>
			<choose>
	         <when test="option eq ''.toString()">
	           AND (BOOK_TITLE LIKE CONCAT('%', #{keyword}, '%') or BOOK_WRITER LIKE CONCAT('%', #{keyword}, '%'))
	         </when>
	         <when test="option eq '1'.toString()">
	           AND BOOK_TITLE LIKE CONCAT('%', #{keyword}, '%')
	         </when>
	         <when test="option eq '2'.toString()">
	           AND BOOK_WRITER LIKE CONCAT('%', #{keyword}, '%')
	         </when>
	       </choose>

		</where>
		
		ORDER BY BOOK_NO DESC
	</select>	
		
	<!-- 북 단건 조회 -->
	<select id = "selectBookDetail" parameterType="java.util.Map"  resultType = "kr.happyjob.study.system.vo.BookVo">
        /*kr.happyjob.study.system.repository.BookMapper.selectBookDetail*/
		SELECT
			BOOK_NO,
			BOOK_TITLE,
			BOOK_WRITER,
			BOOK_CNT,
			PUBLISHER,
			BOOK_PRICE
		FROM TB_BOOK
		WHERE BOOK_NO = #{bookNo}
	</select>
	
	<!-- 북 저장 -->
	<insert id="insertBook" parameterType="java.util.Map" >
		/*kr.happyjob.study.system.repository.BookMapper.insertBook */

		INSERT 
		INTO TB_BOOK(
			BOOK_TITLE,
			BOOK_WRITER,
			BOOK_CNT,
			PUBLISHER,
			BOOK_PRICE
		) VALUES (
			#{bookTitle}
			,#{bookWriter}
			,#{bookCnt}
			,#{publisher}
			,#{bookPrice}
			
		);

		
	</insert>


	<!-- 북 수정 -->
	<update id="updateBook" parameterType="java.util.Map" >
		/*kr.happyjob.study.system.repository.BookMapper.updateBook */
		<if test ="(bookNo != null) and (!bookNo.equals(''))">
		UPDATE TB_BOOK

		   SET BOOK_CNT  = #{bookCnt}

		 	WHERE BOOK_NO     = #{bookNo}
		 </if>
		 
		
		
	</update>


		<!-- 북 삭제 -->
	<delete id="deleteBook" parameterType="java.util.Map" >
		/*kr.happyjob.study.system.repository.BookMapper.deleteBook */
		<if test ="(bookNo != null) and (!bookNo.equals(''))">
		DELETE 
		  FROM TB_BOOK
			 WHERE BOOK_NO = #{bookNo}
		</if>
		
	</delete>


</mapper>